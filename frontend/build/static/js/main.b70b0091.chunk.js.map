{"version":3,"sources":["logo.svg","components/login.component.js","components/header.component.js","components/signup.component.js","components/tasks.component.js","components/add.component.js","components/edit.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","email","password","handleSubmit","e","preventDefault","axios","post","then","res","data","validated","props","changeEmail","sessionStorage","setItem","id","history","push","console","log","error","handleChange","target","value","name","md5","String","setState","bind","className","onSubmit","this","onChange","type","placeholder","required","autofocus","to","Component","withRouter","Header","logout","clear","class","onClick","SignUP","first_name","last_name","rep_password","alert","Tasks","tasks","deleteTodo","delete","response","filter","el","_id","catch","check","getItem","edit","get","length","map","task","title","added_date","last_date","aria-hidden","Add","Date","toString","handleDate","added","message","Edit","componentDidMount","match","params","dt","dtt","getDate","mt","getMonth","slice","ld","getFullYear","edited","App","path","component","SignUp","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b70b0091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport {Link,withRouter} from 'react-router-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport md5 from 'md5-hash';\nimport axios from 'axios';\n\nconst CLIENT_ID = '801995831613-ddtfhtnc7vlvepcuk7hb2hdqkb98fehe.apps.googleusercontent.com';\n\nclass Login extends Component{\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  state=\n  {\n      email:null,\n      password:null,\n  }\n  \n  handleSubmit=(e)=>{\n    e.preventDefault();\n    axios.post('http://localhost:300/validate',this.state)\n    .then(res=>{if(res.data.validated){this.props.changeEmail(this.state.email);sessionStorage.setItem('email', this.state.email);sessionStorage.setItem('id',res.data.id);this.props.history.push('/user')}else{console.log('unable to submit,try again later'+res.data.error)}})\n\n  }\n\n  handleChange=(e)=>{\n    var data=e.target.value;\n    if(e.target.name === 'password')\n    {\n      data=md5(String(data))\n    }\n  \n    this.setState({\n      [e.target.name]:data\n    })\n  }\n\n    render(){\n        return(\n          <div className='container center_div'>\n          <form onSubmit={this.handleSubmit} className=\"align-middle spacing\">\n          <h1 className=\"sign_in_text text_center\"> Sign in</h1>\n          {/* <div className='form-group'>\n          <GoogleLogin clientId={CLIENT_ID}  onSuccess={ this.google_login } onFailure={ this.handleLoginFailure } cookiePolicy={ 'single_host_origin' } responseType='code,token' />\n          </div> */}\n          <div className='container form-group'>\n          <input onChange={ this.handleChange } type=\"email\"  name='email' id=\"inputEmail\" className=\"form-control btn-lg\" placeholder=\"Email address\" required autofocus=\"\"/>\n          </div>\n          <div className='container form-group'>\n          <input onChange={ this.handleChange } name='password' type=\"password\" id=\"inputPassword\" className=\"form-control btn-lg\" placeholder=\"Password\" required/>\n          </div>\n          <div className='container form-group'>\n          <button className=\"btn btn-primary btn-block btn-lg\"><i className=\"fas fa-sign-in-alt\"></i> Sign in</button>\n          </div>\n          <hr/>\n          <div className='container form-groupx'>\n          <button className=\"btn btn-outline-dark btn-block btn-lg\" type=\"button\" id=\"btn-signup\"> <Link to='/signup'>Sign up New Account</Link></button>   \n          </div>         \n          </form>\n          </div>\n        )\n     \n        }\n}\n\nexport default withRouter(Login);\n","import React,{Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nclass Header extends Component{  constructor() {\n  super();\n}\nlogout=()=>{\n  sessionStorage.clear();\n  this.props.history.push('/')\n}\n\n    render(){\n        return(\n            <div class=\"container\">\n  <div class=\"jumbotron\">\n  {this.props.email?<button onClick={this.logout} className='float-right btn-dark btn-lg'>LogOut</button>:\"\"}\n    <h1>My TODO App</h1>   \n    <p>{this.props.email}</p>   \n  </div>\n  \n</div>\n        )\n    }\n}\nexport default withRouter(Header)","import React,{Component} from 'react';\nimport md5 from 'md5-hash';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom'\nclass SignUP extends Component{\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    \n      }\n    \n      state=\n      {\n          first_name:null,\n          last_name:null,\n          email:null,\n          password:null,\n          rep_password:null\n      }\n\n\n      handleSubmit=(e)=>{\n        e.preventDefault();\n        if(this.state.password != this.state.rep_password)\n        {\n            alert('both passwords do not match')\n            return null;\n        }\n        axios.post('http://localhost:300/add',this.state)\n        .then(res=>{if(res.data){this.props.history.push('/')}else{console.log('unable to submit,try again later')}})\n      }\n\n      handleChange=(e)=>{\n        var data=e.target.value;\n        if(e.target.name === 'password' || e.target.name === 'rep_password')\n        {\n          data=md5(String(data))\n        }\n      \n        this.setState({\n          [e.target.name]:data\n        })\n      }\n\n    render(){\n        return(\n            <div className='container center_div'>\n\n            <form onSubmit={this.handleSubmit} className=\"align-middle spacing\">\n            <h1 className=\"sign_in_text text_center\"> Sign Up</h1>\n            <div className='container form-group'>\n            <input onChange={ this.handleChange } type=\"text\"  name='first_name' id=\"inputFirstName\" className=\"form-control btn-lg\" placeholder=\"First Name\" required autofocus=\"\"/>\n            </div>\n            <div className='container form-group'>\n            <input onChange={ this.handleChange } type=\"text\"  name='last_name' id=\"inputLastName\" className=\"form-control btn-lg\" placeholder=\"Last Name\" required autofocus=\"\"/>\n            </div>\n            <div className='container form-group'>\n            <input onChange={ this.handleChange } type=\"email\"  name='email' id=\"inputEmail\" className=\"form-control btn-lg\" placeholder=\"Email address\" required autofocus=\"\"/>\n            </div>\n            <div className='container form-group'>\n            <input onChange={ this.handleChange } name='password' type=\"password\" id=\"inputPassword\" className=\"form-control btn-lg\" placeholder=\"Password\" required/>\n            </div>\n\n            <div className='container form-group'>\n            <input onChange={ this.handleChange } name='rep_password' type=\"password\" id=\"rep_inputPassword\" className=\"form-control btn-lg\" placeholder=\"Password\" required/>\n            </div>\n            <div className='container form-group'>\n            <button className=\"btn btn-primary btn-block btn-lg\"><i className=\"fas fa-sign-in-alt\"></i> Sign Up</button>\n            </div>\n            <hr/>        \n            </form>\n            </div>\n        )\n    }\n}\nexport default withRouter(SignUP)","import React,{Component} from 'react'\nimport axios from 'axios'\nimport {Link,withRouter} from 'react-router-dom';\nclass Tasks extends Component\n{\n  \n  state={\n      tasks:[]\n  }\n  \n    componentDidMount(){\n        axios.get('http://localhost:300/todos/get/'+sessionStorage.getItem('email'))\n         .then(response => {console.log(response);this.setState({tasks:response.data})})\n         .catch(error => {console.log(error)})\n    }\n    deleteTodo=(e)=>{\n        const id=e.target.id;\n        axios.delete('http://localhost:300/todos/'+id)\n         .then(response => {console.log(response);this.setState({tasks: this.state.tasks.filter(el => el._id !== id)})})\n         .catch(error => {console.log(error)})\n    }\n\n    check=()=>{\n        if(!sessionStorage.getItem('email')){\n            this.props.history.push('/')\n        }\n      }\n      \n    edit=(e)=>{\n        const id=e.target.id;\n        this.props.history.push('/edit/'+id)\n\n\n    }  \nrender(){\n    this.check();\n    const tasks=this.state.tasks.length?(this.state.tasks.map( task => { return (<div><div className=\"container bcontent\">\n    <hr />\n    <div className=\"list-group card\">\n    \n        <div className=\"row no-gutters\">\n\n            <div className=\"col-sm-12\">\n            <h2 id={task._id} title='Edit This Task' onClick={this.edit} className=\"card-header\">{task.task}</h2>\n                <div   className=\"card-body\">\n                  <div><a onClick={this.deleteTodo}><i id={task._id}  className=\"fa fa-trash-o float-right pointer\"></i></a></div>\n                  <div><b className=\"card-text\">Added Date : {task.added_date}</b></div> \n                    <div><b className=\"card-text\">Last Date: {task.last_date}</b></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div></div>)})):(\n    <div className=\"text-center jumbotron\">Loading post...</div>\n);  \nreturn(\n    <div>\n        <Link to='/add'><i className=\"fa fa-plus-circle float-right fa-4x add\" aria-hidden=\"true\"></i></Link>\n              \n          <div className=\"container\">\n      \n                {tasks}\n                </div>\n    </div>\n\n)\n}\n}\n{/* <Link to='/add'><i class=\"fa fa-plus-circle float-right fa-4x add\" aria-hidden=\"true\"></i></Link> */}\nexport default withRouter(Tasks)","import React,{Component} from 'react'\nimport axios from 'axios'\nclass Add extends Component{\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        var last_date=new Date();\n        last_date=last_date.toString()\n\n      }\n\n      check=()=>{\n        if(!sessionStorage.getItem('email')){\n            this.props.history.push('/')\n        }\n      }\n\n\n      state={\n          added_date:new Date().toString(),\n          task: null,\n          last_date: null,\n          email: sessionStorage.getItem('email')\n      }\n\n      handleChange=(e)=>{\n          this.setState({\n              [e.target.name]:e.target.value\n          })\n      }\n\n      handleDate=(e)=>{\n          const last_date=new Date(e.target.value)\n          this.setState({\n              last_date:last_date.toString()\n          })\n      }\n\n      handleSubmit=(e)=>{\n        e.preventDefault();\n        axios.post('http://localhost:300/todos/add',this.state)\n        .then(res=>{if(res.data.added){console.log(res.message);alert('task added');this.props.history.push('/user')}else{console.log(res.error+' unable to submit,try again later'+res.error)}})\n\n      }\n\nrender(){\n    this.check();\n    return(\n<div className='container center_div'>\n<form onSubmit={this.handleSubmit} className=\"align-middle spacing\">\n<h1 className=\"sign_in_text text_center\"> Add Task</h1>\n<br>\n</br>\n<div className='container form-group'>\n<label className='float-left'>Enter Task: </label> \n<input onChange={ this.handleChange } type=\"text\"  name='task' id=\"inputTask\" className=\"form-control btn-lg\" placeholder=\"Enter Task\" required autofocus=\"\"/>\n</div>\n<div className='container form-group'>\n<label className='float-left'>Enter Last Date: </label> \n<input onChange={ this.handleDate } type=\"date\"  name='last_date' id=\"inputLastDate\" className=\"form-control btn-lg\" placeholder=\"Enter Last Date\" required autofocus=\"\"/>\n</div>\n<div>\n</div>\n<div className='container form-group'>\n<button className=\"btn btn-primary btn-block btn-lg\"><i className=\"fas fa-sign-in-alt\"></i> Submit</button>\n</div>\n<hr/>        \n</form>\n</div>\n)\n}\n}\nexport default Add;","import React,{Component} from 'react'\nimport axios from 'axios'\nclass Edit extends Component{\n    constructor(props){\n        super(props)\n    }\n    state={\n        added_date:new Date().toString(),\n        task:null,\n        last_date:null\n    }\n    componentDidMount=()=>{\n        let id=this.props.match.params.id;\n        axios.get('http://localhost:300/todos/'+id)\n        .then(response => {var dt=response.data.last_date;dt=new Date(dt); var dtt=dt.getDate();var mt=dt.getMonth()+1;   var mt = (\"0\" + mt).slice(-2)  ;var yr=dt.getFullYear(); var ld=yr+'-'+mt+'-'+dtt;this.setState({'task':response.data.task,'last_date':ld});})\n        .catch(error => {console.log(error)})\n\n    }\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    handleDate=(e)=>{\n        const last_date=e.target.value\n        this.setState({\n            'last_date':last_date\n        })\n\n    }\n\n    handleSubmit=(e)=>{\n        let id=this.props.match.params.id;\n        var last_date=this.state.last_date;\n        e.preventDefault();\n        last_date=new Date(last_date).toString()\n        this.setState({\n            'last_date':last_date\n        },function(){\n            axios.post('http://localhost:300/todos/'+id,this.state)\n            .then(res=>{if(res.data.edited){alert('task edited');this.props.history.push('/user')}else{console.log(res.error+' unable to edit,try again later')}})\n\n        })\n\n\n    }\nrender(){\n    return(<div className='container center_div'>\n    <form onSubmit={this.handleSubmit} className=\"align-middle spacing\">\n    <h1 className=\"sign_in_text text_center\"> Edit Task</h1>\n    <br>\n    </br>\n    <div className='container form-group'>\n    <label className='float-left'>Task: </label> \n    <input value={this.state.task} onChange={ this.handleChange } type=\"text\"  name='task' id=\"inputTask\" className=\"form-control btn-lg\" placeholder=\"Enter Task\" required autofocus=\"\"/>\n    </div>\n    <div className='container form-group'>\n    <label className='float-left'>Enter Last Date: </label> \n    <input value={this.state.last_date} onChange={ this.handleDate } type=\"date\"  name='last_date' id=\"inputLastDate\" className=\"form-control btn-lg\" placeholder=\"Enter Last Date\" required autofocus=\"\"/>\n    </div>\n    <div>\n    </div>\n    <div className='container form-group'>\n    <button className=\"btn btn-primary btn-block btn-lg\"><i className=\"fas fa-sign-in-alt\"></i> Submit</button>\n    </div>\n    <hr/>        \n    </form>\n    </div>)\n}\n}\nexport default Edit\n\n// value={this.state.last_date","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter,Route,Switch, Router} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Login from './components/login.component'\nimport Header from './components/header.component'\nimport SignUp from './components/signup.component'\nimport Tasks from './components/tasks.component'\nimport Add from './components/add.component'\nimport Edit from './components/edit.component'\n\nclass App extends Component{\n\n  state={\n    email:''\n  }\n  changeEmail=(email)=>\n  {\n    this.setState({\n      email: email,\n    })\n  }\nrender() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Header email={this.state.email} changeEmail={this.changeEmail}/>\n      <Switch>\n      <Route path='/signup' component={SignUp}></Route>\n      <Route path='/user' component={Tasks}></Route>\n      <Route path='/add' component={Add}></Route>\n      <Route path='/edit/:id' component={Edit}></Route>\n      <Route path='/' render={props=><Login changeEmail={this.changeEmail}/>}></Route>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}